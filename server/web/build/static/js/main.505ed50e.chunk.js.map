{"version":3,"sources":["core.js","logo.svg","img/splash.png","components/splashScreen/index.jsx","components/login/index.jsx","components/signup/index.jsx","components/dashboard/post.jsx","components/dashboard/index.jsx","components/profile/index.jsx","components/live-socket/index.jsx","components/live-admin/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","Splash","yup","email","required","password","min","max","name","Weather","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Dashboard","createTheme","LiveSocket","useState","livePost","setlivePost","useEffect","socket","io","on","console","log","message","data","close","axios","get","then","res","Box","sx","width","height","margin","backgroundColor","opacity","className","teamA","teamB","tossWinner","Typography","variant","gutterBottom","component","choiceOfToss","run","wicket","bowl","batsmanA","batsmanB","Item","Paper","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","LiveAdmin","useHistory","batA","batB","bowler","style","m","noValidate","autoComplete","Grid","container","rowSpacing","columnSpacing","xs","sm","md","item","lg","FormControl","minWidth","InputLabel","id","Select","labelId","value","label","onChange","e","prev","target","MenuItem","TextField","defaultValue","type","InputLabelProps","shrink","Button","onClick","post","catch","err","App","history","Navbar","bg","Container","Brand","href","Toggle","Collapse","Nav","Link","push","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.505ed50e.chunk.js","sourcesContent":["\nconst dev = \"http://localhost:5001\"\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\n\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/splash.257ba1d2.png\";","import img from \"./../../img/splash.png\"\n\n\nfunction Splash() {\n\n    return (\n        <>\n            <div style={{backgroundColor: \"#181415\", width: \"100%\", height: \"100vh\"}}>\n\n                <img style={{\n                    width: \"100%\",\n                    position: \"fixed\",\n                    bottom: \"0px\"\n                }}\n                    src={img} alt=\"\" />\n            </div>\n        </>\n    );\n}\n\nexport default Splash;","\nimport { useState, useEffect, useRef } from \"react\"\nimport axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\n\nimport { Formik, Field, Form, useFormik } from \"formik\";\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport * as yup from 'yup';\nimport { baseUrl } from \"./../../core\"\n\nimport { GlobalContext } from '../../context/Context';\nimport { useContext } from \"react\";\n\n\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .max(10, 'No more then 10')\n    .required('Password is required'),\n});\n\nfunction Weather() {\n  let history = useHistory();\n\n  let { state, dispatch } = useContext(GlobalContext);\n\n\n  const formik = useFormik({\n    validationSchema: validationSchema,\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: function (values) {\n      console.log(\"values: \", values)\n\n      axios.post(`${baseUrl}/api/v1/login`, {\n        email: values.email,\n        password: values.password,\n      }, {\n        withCredentials: true\n      })\n        .then((res) => {\n          console.log(\"res: \", res.data);\n\n          if (res.data.email) {\n\n            dispatch({\n              type: \"USER_LOGIN\",\n              payload: {\n                name: res.data.name,\n                email: res.data.email,\n                _id: res.data._id\n              }\n            })\n            // history.push(\"/\")\n          }\n\n\n        })\n\n    }\n  });\n\n  return (\n    <div style={{ margin: \"2rem\" }}>\n      <h1>Login page</h1>\n\n      <form onSubmit={formik.handleSubmit}>\n        <Stack spacing={2}>\n\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"outlined-basic\"\n            label=\"Email\"\n            variant=\"outlined\"\n\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"filled-basic\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\n        </Stack>\n\n      </form>\n\n    </div>\n  );\n}\nexport default Weather;\n","\nimport { useState, useEffect, useRef } from \"react\"\nimport axios from 'axios';\n\nimport { Formik, Field, Form, useFormik } from \"formik\";\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport * as yup from 'yup';\nimport { baseUrl } from \"./../../core\"\n\nconst validationSchema = yup.object({\n    name: yup\n        .string('Enter your name')\n        .required('Name is required'),\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .max(10, 'No more then 10')\n        .required('Password is required'),\n});\n\nfunction Weather() {\n\n    const formik = useFormik({\n        validationSchema: validationSchema,\n        initialValues: {\n            name: '',\n            email: '',\n            password: '',\n        },\n        onSubmit: function (values) {\n            axios.post(`${baseUrl}/api/v1/signup`, {\n                name: values.name,\n                email: values.email,\n                password: values.password,\n            })\n                .then((res) => {\n                    console.log(\"res: \", res.data);\n                })\n        }\n    });\n\n    return (\n        <div style={{ margin: \"2rem\" }}>\n            <h1>Signup page</h1>\n\n            <form onSubmit={formik.handleSubmit}>\n                <Stack spacing={2}>\n\n                    <TextField\n                        fullWidth\n                        color=\"primary\"\n                        id=\"outlined-basic\"\n                        label=\"Full Name\"\n                        variant=\"outlined\"\n\n                        name=\"name\"\n                        value={formik.values.name}\n                        onChange={formik.handleChange}\n\n                        error={formik.touched.name && Boolean(formik.errors.name)}\n                        helperText={formik.touched.name && formik.errors.name}\n                    />\n\n                    <TextField\n                        fullWidth\n                        color=\"primary\"\n                        id=\"outlined-basic\"\n                        label=\"Email\"\n                        variant=\"outlined\"\n\n                        name=\"email\"\n                        value={formik.values.email}\n                        onChange={formik.handleChange}\n\n                        error={formik.touched.email && Boolean(formik.errors.email)}\n                        helperText={formik.touched.email && formik.errors.email}\n                    />\n\n                    <TextField\n                        fullWidth\n                        color=\"primary\"\n                        id=\"filled-basic\"\n                        label=\"Password\"\n                        variant=\"outlined\"\n                        type=\"password\"\n\n                        name=\"password\"\n                        value={formik.values.password}\n                        onChange={formik.handleChange}\n\n                        error={formik.touched.password && Boolean(formik.errors.password)}\n                        helperText={formik.touched.password && formik.errors.password}\n                    />\n\n                    <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Signup</Button>\n                </Stack>\n\n            </form>\n\n        </div>\n    );\n}\nexport default Weather;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ShareIcon from '@mui/icons-material/Share';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nconst ExpandMore = styled((props) => {\n    const { expand, ...other } = props;\n    return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n    }),\n}));\n\nexport default function RecipeReviewCard(props) {\n    const { text, email, name, timestamp } = props;\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <Card sx={{ maxWidth: 345 }}>\n            <CardHeader\n                avatar={\n                    <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\n                        {name[0]}\n                    </Avatar>\n                }\n                action={\n                    <IconButton aria-label=\"settings\">\n                        <MoreVertIcon />\n                    </IconButton>\n                }\n                title={name}\n                subheader={email}\n                \n            />\n            \n            <CardContent>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    {text}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <IconButton aria-label=\"add to favorites\">\n                    <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                    <ShareIcon />\n                </IconButton>\n            </CardActions>\n            \n        </Card>\n    );\n}\n","import axios from 'axios';\nimport { useState, useEffect, useRef } from \"react\"\nimport { baseUrl } from \"./../../core\"\nimport { GlobalContext } from './../../context/Context';\nimport { useContext } from \"react\";\nimport Post from \"./post\"\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport io from 'socket.io-client';\n\n\nfunction Dashboard() {\n    const [inputText, setInputText] = useState(\"\");\n    let { state, dispatch } = useContext(GlobalContext);\n\n    const [posts, setPosts] = useState([])\n    const [refresh, setRefresh] = useState(false)\n    const [isMore, setIsMore] = useState(true)\n\n    useEffect(() => {\n        axios.get(`${baseUrl}/api/v1/posts?page=0`, {\n            withCredentials: true\n        })\n            .then((res) => {\n                console.log(\"res +++: \", res.data);\n                setPosts(res.data)\n\n            })\n    }, [])\n\n    useEffect(() => {\n        const socket = io(\"http://localhost:5001\"); // to connect with locally running Socker.io server\n\n        socket.on('connect', function () {\n            console.log(\"connected to server\")\n        });\n        socket.on('disconnect', function (message) {\n            console.log(\"disconnected from server: \", message);\n        });\n        socket.on('POSTS', function (data) {\n            console.log(data);\n            setPosts((prev) => [data, ...prev])\n        });\n\n        return () => {\n            socket.close();\n        };\n    }, []);\n\n    const loadMore = () => {\n        axios.get(`${baseUrl}/api/v1/posts?page=${posts.length}`,\n            {\n                withCredentials: true\n            })\n            .then((res) => {\n                console.log(\"res +++: \", res.data);\n                if (res.data?.length) {\n                    const newPosts = [...posts, ...res.data]\n                    setPosts(newPosts)\n                } else {\n                    setIsMore(false)\n                }\n            })\n    }\n\n\n    const submit = () => {\n        if (inputText !== \"\") {\n            axios.post(`${baseUrl}/api/v1/post`, {\n                postText: inputText\n            }, {\n                withCredentials: true\n            })\n                .then((res) => {\n                    console.log(\"res: \", res.data);\n                    setRefresh(!refresh)\n                    // alert(\"post created\");\n\n                })\n        }\n    }\n\n    return (\n        <div style={{ margin: \"1rem\" }}>\n\n            <h1> Dashboard Page </h1>\n\n\n            <Stack spacing={2} direction=\"column\">\n\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    multiline\n                    rows={4}\n                    value={inputText}\n                    onChange={(e) => {\n                        setInputText(e.target.value)\n                    }}\n                    placeholder=\"What's in your mind\"\n                /> <br />\n                <Button variant=\"contained\" onClick={submit}>Post</Button>\n\n            </Stack>\n\n            <br />\n\n            {posts.map((eachPost, index) => (\n                <Post key={index} name={eachPost.name} email={eachPost.email} text={eachPost.postText} />\n            ))}\n\n            <br />\n\n            {(isMore) ? <Button onClick={loadMore}>Load More</Button> : null}\n\n        </div>\n    );\n}\n\nexport default Dashboard;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { GlobalContext } from './../../context/Context';\nimport { useContext } from \"react\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://mui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n\nconst theme = createTheme();\n\nexport default function Album() {\n\n    let { state, dispatch } = useContext(GlobalContext);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n\n            <main>\n                {/* Hero unit */}\n                <Box\n                    sx={{\n                        bgcolor: 'background.paper',\n                        pt: 8,\n                        pb: 6,\n                    }}\n                >\n                    <Container maxWidth=\"sm\">\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h2\"\n                            align=\"center\"\n                            color=\"text.primary\"\n                            gutterBottom\n                        >\n                            {state?.user?.name}\n                        </Typography>\n                        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\n                            {state?.user?.email}\n                        </Typography>\n                        <Stack\n                            sx={{ pt: 4 }}\n                            direction=\"row\"\n                            spacing={2}\n                            justifyContent=\"center\"\n                        >\n                            <Button variant=\"contained\">Main call to action</Button>\n                            <Button variant=\"outlined\">Secondary action</Button>\n                        </Stack>\n                    </Container>\n                </Box>\n               \n            </main>\n            {/* Footer */}\n            <Box sx={{ bgcolor: 'background.paper', p: 6 }} component=\"footer\">\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                    Footer\n                </Typography>\n                <Typography\n                    variant=\"subtitle1\"\n                    align=\"center\"\n                    color=\"text.secondary\"\n                    component=\"p\"\n                >\n                    Something here to give the footer a purpose!\n                </Typography>\n                <Copyright />\n            </Box>\n            {/* End footer */}\n        </ThemeProvider>\n    );\n}\n","import {useState  , useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport Box from '@mui/material/Box';\r\nimport './index.css'\r\nimport {baseUrl} from './../../core'\r\nimport io from 'socket.io-client'\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\n function LiveSocket() {\r\n\r\n  const [livePost, setlivePost] = useState({})\r\n\r\n  useEffect(() => {\r\n    const socket = io(\"http://localhost:5001\"); // to connect with locally running Socker.io server\r\n\r\n    socket.on('connect', function () {\r\n        console.log(\"connected to server\")\r\n    });\r\n    socket.on('disconnect', function (message) {\r\n        console.log(\"disconnected from server: \", message);\r\n    });\r\n    socket.on('LIVE', function (data) {\r\n        console.log(data);\r\n        setlivePost(data)\r\n    });\r\n\r\n    return () => {\r\n        socket.close();\r\n    };\r\n}, []);\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`${baseUrl}/api/v1/live`)\r\n    .then((res)=>{\r\n      console.log(\"res +++\" , res.data)\r\n      setlivePost(res.data)\r\n    })\r\n  }, [])\r\n  return (\r\n      <div>\r\n    <Box\r\n      sx={{\r\n        width: 1000,\r\n        height: 600,\r\n        margin:0,\r\n        backgroundColor: 'primary.dark',\r\n        '&:hover': {\r\n          backgroundColor: 'primary.main',\r\n          opacity: [0.2, 0.3, 0.9],\r\n        },\r\n      }}\r\n    />\r\n    <div className=\"main\">\r\n    <div className=\"row\">\r\n        <div className=\"coloumn\">\r\n          <h1>{livePost?.teamA} vs {livePost?.teamB}  <span>(cricket)</span></h1>\r\n\r\n          <br />\r\n          <p>{livePost?.tossWinner} won the toss and elected to first</p>\r\n          <h2> \r\n          <Typography variant=\"h3\" gutterBottom component=\"div\">\r\n          {livePost?.choiceOfToss}\r\n      </Typography>  </h2>\r\n          <br />\r\n          <br />\r\n          <h2>{livePost?.run}/{livePost?.wicket} ball  <span>{livePost?.bowl} over</span></h2>\r\n          <br />\r\n          <h2>{livePost?.batsmanA}  <span>34(17 balls)</span></h2>\r\n          <h2>{livePost?.batsmanB}   <span>41(22 balls)</span></h2>\r\n\r\n          <br /><br />\r\n          <h2>Run rate:  <span>5 run/over</span></h2>\r\n        </div>\r\n        <div className=\"coloumn column1\">\r\n            \r\n        <h2>Africa bowling</h2>\r\n          <br />\r\n          <br />\r\n         \r\n          <h2>waseem  <span>3.2 over,2w,23run</span></h2>\r\n          <h2>shaheen  <span>3.2 over,2w,23run</span></h2>\r\n          <br />\r\n          <h2>  Target: 230 run</h2>\r\n          \r\n            </div>\r\n    </div>\r\n    </div>\r\n   \r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default LiveSocket;","\nimport { useState, useEffect, useRef } from \"react\"\nimport './index.css'\nimport LiveSocket from \"../live-socket\";\nimport axios from 'axios';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\n\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport { baseUrl } from \"./../../core\"\n// import { GlobalContext } from '../../context/Context';\n// import { useContext } from \"react\";\nimport io from 'socket.io-client';\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\n\n\n\nfunction LiveAdmin() {\n  let history = useHistory();\n  const [livePost, setlivePost] = useState({\n    teamA: \"\",\n    teamB: \"\",\n    tossWinner:\"\",\n    choiceOfToss:\"\",\n        batA: \"\",\n        batB: \"\",\n        bowler: \"\",\n        bowl: \"\",\n        wicket:\"\",\n  });\n  // let { state, dispatch } = useContext(GlobalContext);\n  // const [posts, setPosts] = useState([])\nuseEffect(() => {\n  axios.get(`${baseUrl}/api/v1/live`)\n  .then((res)=>{\n   console.log(\"res +++\" , res.data)\n   setlivePost(res.data)\n  })\n}, [])\n\n\nconst submit = () => {\n      axios.post(`${baseUrl}/api/v1/live`, livePost)\n          .then((res) => {\n              console.log(\"res: \", res.data);\n              // alert(\"post created\");\n          })\n          .catch((err) =>{\n            console.log(err)\n          })\n}\nconst [age, setAge] = useState('');\n\n  const handleChange = (event) => {\n    setAge(event.target.value);\n  };\n  return (\n    <div style={{ margin: \"1rem\" , padding: \"2rem\" }}>\n\n    <h1 className=\"heading\" > Admin Panel </h1>\n\n    {/* =============================general============================ */}\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Typography variant=\"h3\" gutterBottom component=\"div\">\n      General\n      </Typography>\n      <div>\n\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n      <Grid item xs={12} sm={4} md={3} lg={2} >\n <Item>\n {/* demo-simple-select-helper-label */}\n\n <FormControl sx={{ m: 1, minWidth: 200 }}>\n        <InputLabel id=\"demo-simple-select-helper-label\">Select Team A</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={livePost.teamA}\n          label=\"Age\"\n          // onChange={handleChange}\n          onChange={(e) => {\n            setlivePost((prev) => {\n              return{...prev , teamA: e.target.value}\n            })\n        }}\n        >\n          <MenuItem value={\"pakistan\"}>\n            <em>Pakistan</em>\n          </MenuItem>\n          <MenuItem value={\"India\"}>India</MenuItem>\n          <MenuItem value={\"Australia\"}>Australia</MenuItem>\n          <MenuItem value={\"England\"}>England</MenuItem>\n        </Select>\n      </FormControl>\n\n\n <TextField \n          id=\"outlined-helperText\"\n          label=\"Team A Name\"\n          defaultValue=\"Default Value\"\n          value={livePost.teamA}\n          onChange={(e) => {\n              setlivePost((prev) => {\n                return{...prev , teamA: e.target.value}\n              })\n          }}\n        />\n </Item>\n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2} >\n <Item>\n <TextField \n          id=\"outlined-helperText\"\n          label=\"Team A Name\"\n          defaultValue=\"Default Value\"\n          value={livePost.teamB}\n          onChange={(e) => {\n              setlivePost((prev) => {\n                return{...prev , teamB: e.target.value}\n              })\n          }}\n        />\n </Item>\n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Who Won the Toss\"\n          defaultValue=\"Default Value\"\n          value={livePost.tossWinner}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , tossWinner:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"chose elected to first\"\n          defaultValue=\"Default Value\"\n          value={livePost.choiceOfToss}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , choiceOfToss:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Batsman One \"\n          defaultValue=\"Default Value\"\n          value={livePost.batA}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n               return{...prev , batA:e.target.value}}\n                )\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Batsman B Name\"\n          defaultValue=\"Default Value\"\n          value={livePost.batB}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , batB:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  \n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Bowl\"\n          defaultValue=\"Default Value\"\n          value={livePost.bowl}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , bowl:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n  <Item>\n  <TextField\n        required\n          id=\"outlined-number\"\n          label=\"Bowler\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={livePost.bowler}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , bowler:e.target.value}\n              })\n          }}\n        />\n  </Item>\n  </Grid>\n</Grid>\n        \n       \n         \n      </div>\n    \n      \n    </Box>\n\n     \n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Typography variant=\"h3\" gutterBottom component=\"div\">\n      Team a\n      </Typography>\n      <div>\n\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n \n  <Grid item xs={12} sm={4} md={3} lg={2}>\n    <Item>\n  <TextField\n          id=\"outlined-helperText\"\n          label=\"Team B Name\"\n          defaultValue=\"Default Value\"\n          value={livePost.teamB}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , teamB: e.target.value}\n              })\n          }}\n        />\n        </Item>\n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Who Won the Toss\"\n          defaultValue=\"Default Value\"\n          value={livePost.tossWinner}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , tossWinner:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"chose elected to first\"\n          defaultValue=\"Default Value\"\n          value={livePost.choiceOfToss}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , choiceOfToss:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Batsman One \"\n          defaultValue=\"Default Value\"\n          value={livePost.batA}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n               return{...prev , batA:e.target.value}}\n                )\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Batsman B Name\"\n          defaultValue=\"Default Value\"\n          value={livePost.batB}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , batB:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  \n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Bowl\"\n          defaultValue=\"Default Value\"\n          value={livePost.bowl}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , bowl:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n  <Item>\n  <TextField\n        required\n          id=\"outlined-number\"\n          label=\"Bowler\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={livePost.bowler}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , bowler:e.target.value}\n              })\n          }}\n        />\n  </Item>\n  </Grid>\n</Grid>\n        \n       \n         \n      </div>\n    \n      \n    </Box>\n\n   \n<Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n       <Typography variant=\"h3\" gutterBottom component=\"div\">\n      Team B\n      </Typography> \n      <div>\n\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n    <Item>\n  <TextField\n          id=\"outlined-helperText\"\n          label=\"Team B Name\"\n          defaultValue=\"Default Value\"\n          value={livePost.teamB}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , teamB: e.target.value}\n              })\n          }}\n        />\n        </Item>\n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Who Won the Toss\"\n          defaultValue=\"Default Value\"\n          value={livePost.tossWinner}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , tossWinner:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"chose elected to first\"\n          defaultValue=\"Default Value\"\n          value={livePost.choiceOfToss}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , choiceOfToss:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Batsman One \"\n          defaultValue=\"Default Value\"\n          value={livePost.batA}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n               return{...prev , batA:e.target.value}}\n                )\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Batsman B Name\"\n          defaultValue=\"Default Value\"\n          value={livePost.batB}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , batB:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  \n  <Grid item xs={12} sm={4} md={3} lg={2}>\n <Item>\n <TextField\n          id=\"outlined-helperText\"\n          label=\"Bowl\"\n          defaultValue=\"Default Value\"\n          value={livePost.bowl}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , bowl:e.target.value}\n              })\n          }}\n        />\n </Item>\n \n  </Grid>\n  <Grid item xs={12} sm={4} md={3} lg={2}>\n  <Item>\n  <TextField\n        required\n          id=\"outlined-number\"\n          label=\"Bowler\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={livePost.bowler}\n          onChange={(e) => {\n              setlivePost((prev) =>{\n                return{...prev , bowler:e.target.value}\n              })\n          }}\n        />\n  </Item>\n  </Grid>\n</Grid>\n        \n       \n          \n      </div>\n    \n      \n    </Box>\n \n{/* \n    {posts.map((eachPost, index) => (\n        <Post key={index} name={eachPost.name} email={eachPost.email} text={eachPost.postText} />\n    ))} */}\n\n    <br />\n    <br />\n          <Button variant=\"contained\" width=\"100\" onClick={submit}>Live</Button>\n    {/* {(isMore) ? <Button onClick={loadMore}>Load More</Button> : null} */}\n\n</div>\n  );\n}\nexport default LiveAdmin;\n","import logo from './logo.svg';\nimport './App.css';\nimport { baseUrl } from \"./core\"\nimport axios from 'axios';\nimport { useState, useEffect, useRef } from \"react\"\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  Redirect\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap';\n\n\n\nimport Splash from \"./components/splashScreen/index\"\nimport Login from \"./components/login/index\"\nimport Signup from \"./components/signup/index\"\nimport Dashboard from \"./components/dashboard/index\"\nimport Profile from \"./components/profile/index\"\nimport LiveSocket from \"./components/live-socket/index\";\nimport LiveAdmin from \"./components/live-admin/index\";\n\nimport { GlobalContext } from './context/Context';\nimport { useContext } from \"react\";\n\n\n\n\n\nfunction App() {\n\n  let history = useHistory();\n  return (\n    <>\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand href=\"#home\">React Login project</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link onClick={() => { history.push(\"/\") }}>Scoreboard</Nav.Link>\n            <Nav.Link onClick={() => { history.push(\"/admin\") }}>Dashboard</Nav.Link>\n\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n\n    <Switch>\n      <Route exact path=\"/\" component={LiveSocket} />\n      <Route path=\"/admin\" component={LiveAdmin} />\n\n      <Redirect to=\"/\" />\n    </Switch>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n// import ContextProvider from \"./context/Context\"\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}